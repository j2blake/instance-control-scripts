#! /usr/bin/ruby

=begin
--------------------------------------------------------------------------------

Show the state of the current instance, and what Tomcats are running.

--------------------------------------------------------------------------------

Eventually, we want a display like this:

    current instance: develop (The develop instance)
    git status:
        Vitro:
        Vivo:
    [or is distribution vivo-rel-1.6.2]
    tomcat is [not] running.
    Other tomcats:
        port xxxx, /other/path/to/tomcat

--------------------------------------------------------------------------------
=end

$: << File.dirname(File.expand_path(__FILE__))
require 'common'
require 'pathname'

def show_instance_info()
  path = $settings.instance_path
  if path
    filename = File.basename(path)
    description = $settings.description || "_no description_"
    separator()
    puts "current instance: #{filename} (#{description})"
  else
    separator()
    puts "current instance: No current instance"
  end
end

def show_source_status()
  if @distro.is_release
    show_release_status()
  else
    show_git_status()
  end
end

def show_release_status()
  separator()
  puts "Source status: Released distribution: #{@distro.release_info}"
end

def show_git_status()
  separator()
  puts "git status:"
  puts "    VIVO:"
  Dir.chdir(@distro.vivo_path) { format_git_status(`git status`) }
  puts "    Vitro:"
  Dir.chdir(@distro.vitro_path) { format_git_status(`git status`) }
end

def format_git_status(text)
  puts "        #{text.split("\n").join("\n        ")}"
end

def show_tomcat_status()
  status = figure_tomcat_status()
  not_mine = @tomcats.other_than($settings.catalina_home)

  separator()
  puts status
  if !not_mine.empty?
    puts
    puts "Other tomcats:"
    not_mine.each() do |info|
      puts "    port #{info[:port]}, #{info[:path]}"
    end
  end
end

def figure_tomcat_status()
  return "Tomcat is not defined." unless $settings.catalina_home
  begin
    port = @tomcats.which_port($settings.catalina_home)
    return "Tomcat is not running" unless port
    return "Tomcat is running on port #{port}"
  rescue
    return "No Tomcat at #{$settings.catalina_home}"
  end
end

def show_settings()
  separator()
  puts "settings:"
  $settings.props().each_pair() do |k, v|
    puts "    #{k} = #{v}"
  end
end

def separator()
  puts
  puts "------------------------------------------------------------"
  puts
end

#
# ---------------------------------------------------------
# MAIN ROUTINE
# ---------------------------------------------------------
#

@tomcats = TomcatStatus.new()
@distro = Distro.new($settings.distro_path)

show_instance_info()
show_tomcat_status()
show_source_status()
show_settings()